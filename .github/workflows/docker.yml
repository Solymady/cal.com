name: Build and push image to DockerHub

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  workflow_run:
    workflows: ["Update Calendso"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  check-style:
    name: Check Code Style
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run Prettier (Code Formatting)
        run: npx prettier --check "**/*.{ts,tsx,js,json,md,yml,yaml}"

      - name: Run TypeScript Type Checking
        run: npx tsc --noEmit

  build:
    runs-on: ubuntu-latest
    needs: check-style # Ensures style checks pass before building

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Git submodules
        run: git submodule update --init --recursive

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy environment variables
        run: |
          cp .env.example .env
          echo "DATABASE_HOST=localhost" >> .env
          cat .env >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Start database
        run: |
          docker compose up -d database || echo "Database already running"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: network=host

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          load: true
          push: false
          platforms: linux/amd64
          tags: solymady/calcom
          build-args: |
            NEXT_PUBLIC_LICENSE_CONSENT=true
            CALCOM_TELEMETRY_DISABLED=true
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            MAX_OLD_SPACE_SIZE=8192
            NEXT_PUBLIC_API_V2_URL=${{ secrets.NEXT_PUBLIC_API_V2_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}

      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: solymady/calcom
          build-args: |
            NEXT_PUBLIC_LICENSE_CONSENT=true
            CALCOM_TELEMETRY_DISABLED=true
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            MAX_OLD_SPACE_SIZE=8192
            NEXT_PUBLIC_API_V2_URL=${{ secrets.NEXT_PUBLIC_API_V2_URL }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Cleanup
        run: docker compose down || echo "No containers to stop"
